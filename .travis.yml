---
language: python

services:
  - docker

env:
  global:
    - COREOS_RELEASE_CHANNEL=stable
    - KERNEL_REPOSITORY=git://git.kernel.org/pub/scm/linux/kernel/git/stable/linux-stable.git
    - YAMLLINT_VERSION=1.8.1
    - SHELLCHECK_VERSION=v0.5.0
  matrix:
    - >
      NVIDIA_DRIVER_URL=http://us.download.nvidia.com/tesla/418.67/NVIDIA-Linux-x86_64-418.67.run
      NVIDIA_DRIVER_VERSION=418.67

install:
  - docker pull koalaman/shellcheck:$SHELLCHECK_VERSION
  - docker pull lukasmartinelli/hadolint
  - docker pull jamesmstone/shfmt
  - docker pull boiyaa/yamllint:$YAMLLINT_VERSION

before_script:
  # Check code format
  - docker run -v "$PWD:/mnt" "koalaman/shellcheck:$SHELLCHECK_VERSION" $(find . -name '*.sh')
  - docker run --rm -i lukasmartinelli/hadolint hadolint --ignore DL3015 --ignore DL3008 - < Dockerfile
  - docker run -v "$PWD:/workdir" "boiyaa/yamllint:$YAMLLINT_VERSION" -c .yamllint.yml -s $(find . -name '*.yml')
  - docker run -v "$PWD:/hostdir" -w /hostdir jamesmstone/shfmt -i 2 -w $(find . -name '*.sh')
  - git diff --exit-code

script:
  - coreos_releases_url=https://coreos.com/releases/releases-${COREOS_RELEASE_CHANNEL}.json
  - coreos_version=$(curl -s ${coreos_releases_url} | jq -r  keys_unsorted[0])
  - kernel_version=$(curl -s ${coreos_releases_url} | jq -r .[\"${coreos_version}\"].major_software.kernel[0])
  - tag="mcapuccini/nvidia4coreos:${NVIDIA_DRIVER_VERSION}-coreos-${coreos_version}"
  - tag_latest="mcapuccini/nvidia4coreos:${NVIDIA_DRIVER_VERSION}-coreos-latest"
  - >
    docker build
    --build-arg COREOS_RELEASE_CHANNEL="$COREOS_RELEASE_CHANNEL"
    --build-arg KERNEL_REPOSITORY="$KERNEL_REPOSITORY"
    --build-arg COREOS_VERSION="$coreos_version"
    --build-arg KERNEL_VERSION="$kernel_version"
    --build-arg NVIDIA_DRIVER_URL="$NVIDIA_DRIVER_URL"
    --build-arg NVIDIA_DRIVER_VERSION="$NVIDIA_DRIVER_VERSION"
    --cache-from $tag
    --tag $tag
    --tag $tag_latest
    .

after_success:
  - >
    if [ $TRAVIS_BRANCH = 'master' ] && [ $TRAVIS_PULL_REQUEST = 'false' ]; then
      docker login -u="$DOCKER_USERNAME" -p="$DOCKER_PASSWORD"
      docker push $tag
      docker push $tag_latest
    fi
